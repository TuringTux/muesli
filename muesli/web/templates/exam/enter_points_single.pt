<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<metal:main metal:use-macro="templates('Fragments/main.pt').macros['main']">
  <metal:main metal:fill-slot="content">


<p style="display: flex" name="savestatus"></p>

<h2>Punkte eintragen</h2>

<h3>${exam.name} der Vorlesung ${exam.lecture.name}</h3>

  <p tal:condition="exam.admissions_string" tal:omit-tag="">
    Zu dieser Prüfung ist eine <a tal:attributes="href request.route_path('exam_admission', exam_id=exam.id, tutorial_ids=tutorial_ids)">${exam.admissions_string}</a> erforderlich.
  </p>


<script>/* <![CDATA[ */
jQuery.noConflict();
  function update_total()
  {
    var objs = document.getElementsByClassName('points');
    var total = 0;
    var current = 0;

    for (i = 0; i < objs.length; i++) {
      current = parseFloat(objs[i].value.replace(/,/, "."));
      if (!isNaN(current)) {
        total += current;
      }
    }
    return jQuery("#total")[0].value = Number(total).toFixed(2);
  }
/* ]]> */
</script>

<script>/* <![CDATA[ */
var student_results_json = '${student_results}';
var student_results;
var exercise_ids_json = '${exercise_ids}';

jQuery(document).ready(function() {
    student_results = JSON.parse(student_results_json);
    exercise_ids = JSON.parse(exercise_ids_json);

    jQuery('.student_select').select2({
        width: "16em"
    }).on('change', function (e) {
        var selectedStudents = getSelectedStudents();
        var points_captions = Array(${len(exercises) + 1}).fill('');
        for(i = 0; i < selectedStudents.length; i++) {
            for(j = 0; j < points_captions.length; j++) {
                var caption = student_results[selectedStudents[i].value][j];
                if (caption === 'None'){
                    caption = '-';
                }
                points_captions[j] += caption + '<br/>';
            }
        }

        jQuery('.current-points').each(function(i, obj) {
            obj.innerHTML = (points_captions[i]);
        });
    }).trigger('change');
    jQuery(".select2-search__field").focus().select();
});

function getSelectedStudents() {
    var sel = document.getElementsByClassName("student_select")[0];
    var opts = [], opt;
    // loop through options in select list
    for (var i=0, len=sel.options.length; i<len; i++) {
        opt = sel.options[i];
        // check if selected
        if ( opt.selected ) {
            // add to array of option elements to return from this function
            opts.push(opt);
        }
    }
    // return array containing references to selected option elements
    return opts;
}

function submit_all_points() {
    var selectedStudents = getSelectedStudents();
    var savestatus = document.getElementsByName('savestatus')[0];

    if ( selectedStudents.length == 0 ) {
        return true;
    }


    var parameterHash = new Hash();

    var studentlist = [];
    for(i = 0; i < selectedStudents.length; i++){
        studentlist.push(selectedStudents[i].value);
    }
    parameterHash.set('student_id', studentlist.join(','));

    for (i = 0; i < exercise_ids.length; i++){
        var current_input = document.getElementsByName('points-' + exercise_ids[i][0])[0];
        parameterHash.set('points-' + exercise_ids[i][1], current_input.value);
    }

    new Ajax.Request('${request.route_path('exam_ajax_save_points', exam_id = exam.id, tutorial_ids = request.context.tutorial_ids_str)}', {
                parameters: parameterHash,
                onSuccess:function(response){
                    var status = response.responseText.evalJSON();
                    if (status['format_error']) {
                        savestatus.innerHTML = status['msg'];
                        savestatus.className = "error";
                    } else {
                        savestatus.innerHTML = "Punkte erfolgreich abgespeichert!";
                        savestatus.className = "message";
                    }
                },
                onFailure:function(response){
                    savestatus.innerHTML = "Fehler beim Speichern!";
                    savestatus.className = "error";
                }
            }
    );

    //deselect all students
    var inputPunkte = document.getElementsByClassName('points');
    for(i = 0; i < inputPunkte.length; i++){
        inputPunkte[i].value = "";
    }

    jQuery(".student_select").val(null).trigger('change');
    update_total();
    jQuery(".select2-search__field").focus().select();

    return true;
}
/* ]]> */
</script>

<form id="enter_points_form" onsubmit="submit_all_points(); return false;">
<input type="hidden" id="student_id" name="student_id" />
<table class="points_table" id="enter_points_table">
  <tr>
    <th>Namen</th>
    <th tal:repeat="e exercises">${e.nr}</th>
    <th>Σ</th>
    <th></th>
    <th></th>
  </tr>
  <tr id="row-0">
    <td>
        <select class="student_select" name="students" multiple="multiple">
            <option tal:repeat="student students" value=${student.id}>${student.last_name}, ${student.first_name}</option>
        </select>
    </td>
    <td tal:repeat="e exercises"><p style="text-align: center" class="current-points"></p><input type="text" class="points" name="points-${e.nr}" size="3" onchange="update_total() "></td>
    <td><p style="text-align: center" class="current-points"></p><input id="total" readonly="readonly" size="4" value="0"></td>
    <td></td>
    <td></td>
  </tr>
</table>
<input type="submit" value="Punkte eintragen" />
</form>

<div tal:omit-tag="">
  <!-- This is a very dirty hack to have always enough space to show the whole list-->
</div>
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />

  </metal:main>
</metal:main>
